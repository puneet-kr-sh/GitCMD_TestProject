=========================================================================================================================================================

This file was created by Puneet Kr. Sharma on 2 June 2016 
to test code from Git CMD 

code copied from-: https://try.github.io/levels/1/challenges/1 -....

in GitCMD_TestProject Repository

=========================================================================================================================================================

git init

git status

created a file in folder

git status
----------------------------------------------------------------------------------------------------------------------------------------
Notice how Git says GitBash_MINGW64_TestProject.txt is "untracked"? 
That means Git sees that GitBash_MINGW64_TestProject.txt is a new file.

To tell Git to start tracking changes made to octocat.txt, 
we first need to add it to the staging area, type the following command:

git add file_name.file_extention
----------------------------------------------------------------------------------------------------------------------------------------

git add GitCMD_TestProject.txt
----------------------------------------------------------------------------------------------------------------------------------------
Git is now tracking our octocat.txt file. Let's run git status again to see where we stand:

git status

Notice how Git says changes to be committed? The files listed here are in the Staging Area, and they are not in our repository yet. 
We could add or remove files from the stage before we store them in the repository.

To store our staged changes we run the commit command with a message describing what we've changed. Let's do that now by typing:

git commit -m "Add cute octocat story"

	But before running above command
		I run git status comparison b/w. previous vs. new result

		C:\Users\Android\GitCMD_TestProject>git status
		On branch master

		Initial commit

		Untracked files:
		  (use "git add <file>..." to include in what will be committed)

		        GitCMD_TestProject.txt

		nothing added to commit but untracked files present (use "git add" to track)

		C:\Users\Android\GitCMD_TestProject>git add GitCMD_TestProject.txt

		-----------------------------------------------------------------------------------------------

		C:\Users\Android\GitCMD_TestProject>git status
		On branch master

		Initial commit

		Changes to be committed:
		  (use "git rm --cached <file>..." to unstage)

		        new file:   GitCMD_TestProject.txt

		Changes not staged for commit:
		  (use "git add <file>..." to update what will be committed)
		  (use "git checkout -- <file>..." to discard changes in working directory)

		        modified:   GitCMD_TestProject.txt


		C:\Users\Android\GitCMD_TestProject>


----------------------------------------------------------------------------------------------------------------------------------------
C:\Users\Android\GitCMD_TestProject>git commit -m "Commit command from GitCMD fo
r GitCMD_TestProject Repository by Pineet Kr. Sharma on 2nd June 2016 at 6:07 PM
"
[master (root-commit) 9a34840] Commit command from GitCMD for GitCMD_TestProject
 Repository by Pineet Kr. Sharma on 2nd June 2016 at 6:07 PM
 1 file changed, 14 insertions(+)
 create mode 100644 GitCMD_TestProject.txt

C:\Users\Android\GitCMD_TestProject>



------------------------------------------------------------------------------------------------------------------------------------------
C:\Users\Android\GitCMD_TestProject>git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   GitCMD_TestProject.txt

no changes added to commit (use "git add" and/or "git commit -a")

C:\Users\Android\GitCMD_TestProject>



------------------------------------------------------------------------------------------------------------------------------------------
C:\Users\Android\GitCMD_TestProject>git add *.txt

C:\Users\Android\GitCMD_TestProject>git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   GitCMD_TestProject.txt
        new file:   dummy-1.txt
        new file:   dummy-2.txt
        new file:   dummy.txt


C:\Users\Android\GitCMD_TestProject>git



------------------------------------------------------------------------------------------------------------------------------------------

C:\Users\Android\GitCMD_TestProject>git commit -m "COMMIT COMMAND after adding a
ll '.txt' files"
[master a02e63d] COMMIT COMMAND after adding all '.txt' files
 4 files changed, 112 insertions(+), 2 deletions(-)
 create mode 100644 dummy-1.txt
 create mode 100644 dummy-2.txt
 create mode 100644 dummy.txt

C:\Users\Android\GitCMD_TestProject>


------------------------------------------------------------------------------------------------------------------------------------------


C:\Users\Android\GitCMD_TestProject>git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   GitCMD_TestProject.txt

no changes added to commit (use "git add" and/or "git commit -a")

C:\Users\Android\GitCMD_TestProject> git commit -m "Git CMD Commit at 6:44 PM on
 2nd June 2016"
On branch master
Changes not staged for commit:
        modified:   GitCMD_TestProject.txt

no changes added to commit

C:\Users\Android\GitCMD_TestProject>git add GitCMD_TestProject.txt

C:\Users\Android\GitCMD_TestProject>git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   GitCMD_TestProject.txt


C:\Users\Android\GitCMD_TestProject> git commit -m "Git CMD Commit at 6:45 PM on
 2nd June 2016"
[master f391ea4] Git CMD Commit at 6:45 PM on 2nd June 2016
 1 file changed, 35 insertions(+)

C:\Users\Android\GitCMD_TestProject>git status
On branch master
nothing to commit, working directory clean

C:\Users\Android\GitCMD_TestProject>







------------------------------------------------------------------------------------------------------------------------------------------


Great job! We've gone ahead and created a new empty GitHub repository for you to use with Try Git at https://github.com/try-git/try_git.git. To push our local repo to the GitHub server we'll need to add a remote repository.

This command takes a remote name and a repository URL, which in your case is https://github.com/try-git/try_git.git.

Go ahead and run git remote add with the options below:

git remote add origin https://github.com/try-git/try_git.git


------------------------------------------------------------------------------------------------------------------------------------------
C:\Users\Android\GitCMD_TestProject>git remote add origin https://github.com/pun
eet-kr-sh/GitCMD_Test.git
fatal: remote origin already exists.

C:\Users\Android\GitCMD_TestProject>git remote add GitCMD_Test https://github.co
m/puneet-kr-sh/GitCMD_Test.git

C:\Users\Android\GitCMD_TestProject>got status
'got' is not recognized as an internal or external command,
operable program or batch file.

C:\Users\Android\GitCMD_TestProject>git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   GitCMD_TestProject.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        dummy folder/

no changes added to commit (use "git add" and/or "git commit -a")

C:\Users\Android\GitCMD_TestProject>git add
Nothing specified, nothing added.
Maybe you wanted to say 'git add .'?

C:\Users\Android\GitCMD_TestProject>git add .

C:\Users\Android\GitCMD_TestProject>git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   GitCMD_TestProject.txt
        new file:   dummy folder/sub folder/secret/secret.txt


C:\Users\Android\GitCMD_TestProject>




C:\Users\Android\GitCMD_TestProject>git commit -m "Commit from Git CMD  at 8:08
PM on 2nd june 2016 by Puneet after adding some folders * subfolders"
[master 25c18be] Commit from Git CMD  at 8:08 PM on 2nd june 2016 by Puneet afte
r adding some folders * subfolders
 2 files changed, 88 insertions(+)
 create mode 100644 dummy folder/sub folder/secret/secret.txt

C:\Users\Android\GitCMD_TestProject>



------------------------------------------------------------------------------------------------------------------------------------------
The push command tells Git where to put our commits when we're ready, and boy we're ready. 
So let's push our local changes to our origin repo (on GitHub).

The name of our remote is origin and the default local branch name is master. 
The -u tells Git to remember the parameters, so that next time we can simply run git push and Git will know what to do. Go ahead and push it!

git push -u origin master
------------------------------------------------------------------------------------------------------------------------------------------


C:\Users\Android\GitCMD_TestProject>git remote add GitCMD_Test https://github.co
m/puneet-kr-sh/GitCMD_TestProject.git

C:\Users\Android\GitCMD_TestProject>git push GitCMD_Test master
Username for 'https://github.com': puneet-kr-sh
Password for 'https://puneet-kr-sh@github.com':
Counting objects: 19, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (13/13), done.
Writing objects: 100% (19/19), 3.13 KiB | 0 bytes/s, done.
Total 19 (delta 5), reused 0 (delta 0)
To https://github.com/puneet-kr-sh/GitCMD_TestProject.git
 * [new branch]      master -> master

C:\Users\Android\GitCMD_TestProject>

___________________________________________________________________________________________________________________________________________
NOTE :: Repository name on Local Machine and GitHub should be same.
-------------------------------------------------------------------------------------------------------------------------------------------














